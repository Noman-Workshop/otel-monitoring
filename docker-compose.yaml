services:
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel/local-config.yaml" ]
    volumes:
      - ./logs/config/otel/:/etc/otel/
    networks:
      - logs
    ports:
      - "4317:4317"
      - "4318:4318"

  tempo:
    image: grafana/tempo:latest
    command: "-config.file=/etc/tempo/local-config.yaml"
    volumes:
      - ./logs/config/tempo/:/etc/tempo/
      - tempo-data:/var/tempo
    networks:
       - logs
    ports:
      - "3200:3200"

  loki:
    image: grafana/loki:latest
    volumes:
      - ./logs/config/loki/:/etc/loki/
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - logs
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/local-config.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./logs/config/prometheus/:/etc/prometheus/
    networks:
      - logs
    ports:
      - "9090:9090"
    extra_hosts:
    - "host.docker.internal:host-gateway"


  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_INSTALL_PLUGINS=
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          version: 1
          editable: true
        - name: Prometheus
          type: prometheus
          uid: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          version: 1
          editable: true
          jsonData:
            httpMethod: GET
        - name: Tempo
          type: tempo
          access: proxy
          orgId: 1
          url: http://tempo:3200
          basicAuth: false
          version: 1
          editable: true
          apiVersion: 1
          uid: tempo
          jsonData:
            httpMethod: GET
            serviceMap:
              datasourceUid: prometheus
        EOF
        /run.sh
    image: grafana/grafana:latest
    volumes:
      - ./logs/config/graphana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./logs/config/graphana/dashboards/:/var/lib/grafana/dashboards/
    ports:
      - "3000:3000"
    networks:
      - logs
    depends_on:
      - loki
      - tempo
      - prometheus
      - otel-collector

networks:
   logs:
volumes:
  loki-data:
  tempo-data:
  prometheus-data:
